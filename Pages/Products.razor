@page "/products"

@using WatchStore.Data.ProductServe
@inject ProductService prodServe
@using WatchStore.Data.CartServe
@inject CartService cartServe

@inject ILocalStorageService localStorage
@inject IToastService toastService


<div class="container mt-5 mb-5">
    <div class="text-center">
        <h1>Products</h1>
    </div>

    <div class="mt-5">
        <div class="row card-deck">
            @if (products.Any())
            {
                @foreach (var product in products)
                {
                    <div class="col col-md-4 my-3">
                        <div class="card shadow-sm">
                            <img src="@product.Image" class="card-img-top img-responsive" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                                <div class="row justify-content-between">
                                    <div class="col-4">
                                        <span class="badge badge-secondary">Avail: @product.Quantity</span>
                                    </div>
                                    <div class="col-4">
                                        <h5>
                                            <span class="badge badge-info">R @product.Price</span>
                                        </h5>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-outline-info btn-small" @onclick="()=>AddProductToCart(product)">
                                    <i class="fas fa-cart-arrow-down pr-1"></i>
                                </button>
                                @*<button class="btn btn-outline-info btn-small">
                                        <i class="fas fa-eye"></i>
                                    </button>*@
                                @*<button class="btn btn-outline-info btn-small" @onclick="ChangePropertyValue">Add to Cart</button>*@
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <div class="text-center text-danger">No Product Available</div>
                </div>
            }
        </div>
    </div>

</div>

<style>
    .card img {
        height: 250px;
        width: 100%;
    }
</style>

@code {
    List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }

    private async Task RefreshProducts()
    {
        products = await prodServe.GetProductAsync();
    }

    // Notify changes on the productService
    protected override void OnInitialized()
    {
        prodServe.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        prodServe.OnChange -= StateHasChanged;
    }

    // Add to the LocalStorage
    private async void AddProductToCart(Product product)
    {
        await cartServe.AddProductToCart(product);
    }

}
